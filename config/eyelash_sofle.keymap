#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    combos {
        compatible = "zmk,combos";

        layer3 {
            bindings = <&mo 3>;
            key-positions = <54 55>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp ESC     &kp N1     &kp N2          &kp N3           &kp N4     &kp N5              &kp UP_ARROW     &kp N6     &kp N7          &kp N8                &kp N9         &kp N0             &kp BACKSPACE
&kp TAB     &kp Q      &kp W           &kp E            &kp R      &kp T               &kp DOWN_ARROW   &kp Y      &kp U           &kp I                 &kp O          &kp P              &kp BSLH
&kp CAPS    &kp A      &kp S           &kp D            &kp F      &kp G               &kp LEFT_ARROW   &kp H      &kp J           &kp K                 &kp L          &kp SEMICOLON      &kp APOS
&kp LSHFT   &kp Z      &kp X           &kp C            &kp V      &kp B               &kp RIGHT_ARROW  &kp N      &kp M           &kp COMMA             &kp DOT        &kp FSLH           &kp RIGHT_SHIFT
&kp C_MUTE  &kp LCTRL  &lt 1 LEFT_WIN  &lt 2 BACKSPACE  &kp SPACE  &kp LEFT_CONTROL    &kp ENTER        &kp ENTER  &kp LEFT_SHIFT  &mt RIGHT_ALT DELETE  &kp RIGHT_WIN  &kp RIGHT_CONTROL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "Letters";
        };

        Nav {
            bindings = <
&kp GRAVE       &kp F1            &kp F2          &kp F3           &kp F4           &kp F5              &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10            &trans
&trans          &kp GRAVE         &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4            &mmv MOVE_DOWN   &kp PG_UP        &kp END          &kp UP      &kp HOME   &kp MINUS          &kp EQUAL
&trans          &kp TILDE         &trans          &trans           &mkp LCLK        &mkp MB5            &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &kp LEFT_BRACKET   &kp RIGHT_BRACKET
&kp LEFT_SHIFT  &rgb_ug RGB_OFF   &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI     &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp F11    &kp F12            &kp RIGHT_SHIFT
&kp C_MUTE      &kp LEFT_CONTROL  &trans          &kp BACKSPACE    &kp SPACE        &kp LEFT_CONTROL    &mkp LCLK        &kp ENTER        &kp RSHIFT       &kp DELETE  &trans     &kp RIGHT_CONTROL
            >;

            display-name = "Nav";
            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        Num {
            bindings = <
&kp TILDE       &bt BT_SEL 0      &bt BT_SEL 1    &bt BT_SEL 2   &bt BT_SEL 3  &bt BT_SEL 4        &mmv MOVE_UP     &kp F6           &kp SLASH        &kp ASTERISK     &kp MINUS         &kp F10            &trans
&trans          &bt BT_CLR        &bt BT_CLR_ALL  &trans         &trans        &trans              &mmv MOVE_DOWN   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS          &kp UNDER          &kp PLUS
&trans          &out OUT_USB      &out OUT_BLE    &trans         &trans        &trans              &mmv MOVE_LEFT   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp HASH          &kp LBRC           &kp RBRC
&kp LEFT_SHIFT  &sys_reset        &trans          &bootloader    &trans        &trans              &mmv MOVE_RIGHT  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp GREATER_THAN  &bootloader        &kp RIGHT_SHIFT
&trans          &kp LEFT_CONTROL  &trans          &kp BACKSPACE  &kp SPACE     &kp LEFT_CONTROL    &mkp LCLK        &kp ENTER        &kp RIGHT_SHIFT  &kp KP_NUMBER_0  &kp PERIOD        &kp RIGHT_CONTROL
            >;

            sensor-bindings = <&inc_dec_kp END HOME>;
            label = "Num";
        };

        Fn {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F10  &kp F11  &kp F12  &trans       &kp K_LOCK  &kp K_SLEEP
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F7   &kp F8   &kp F9   &kp K_COPY   &trans      &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F4   &kp F5   &kp F6   &kp K_PASTE  &trans      &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F1   &kp F2   &kp F3   &trans       &trans      &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans   &trans   &trans   &trans       &trans
            >;

            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
            label = "Fn";
        };
    };
};
